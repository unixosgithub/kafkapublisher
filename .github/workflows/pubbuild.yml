# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when there is a push to the "master" branch.
#
# To configure this workflow:
#
# 1. Ensure that your repository contains the necessary configuration for your Google Kubernetes Engine cluster, including deployment.yml, kustomization.yml, service.yml, etc.
#
# 2. Create and configure a Workload Identity Provider for GitHub (https://github.com/google-github-actions/auth#setting-up-workload-identity-federation)
#
# 3. Change the values for the GAR_LOCATION, GKE_ZONE, GKE_CLUSTER, IMAGE, REPOSITORY and DEPLOYMENT_NAME environment variables (below).
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke-kustomize

name: Build and Deploy to GKE

on:
  push:
    branches: [ "master" ]

env:
  PROJECT_ID: vivid-lane-348516
  GAR_LOCATION: us-central1 # region of the Artifact Registry
  GKE_CLUSTER: poc-cluster  # cluster name
  GKE_ZONE: us-central1-a   # cluster zone
  DEPLOYMENT_NAME: kafkapublisher # deployment name
  REPOSITORY: mydockerimages # Artifact Registry docker repository
  IMAGE: kafkapublisher

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: 'access_token'
        workload_identity_provider: 'projects/440250098694/locations/global/workloadIdentityPools/github-actions/providers/github-actions-oidc'
        service_account: 'github-actions-workflow@vivid-lane-348516.iam.gserviceaccount.com'

    - name: Docker configuration
      run: |-
        echo ${{steps.auth.outputs.access_token}} | docker login -u oauth2accesstoken --password-stdin https://$GAR_LOCATION-docker.pkg.dev
    # Get the GKE credentials so we can deploy to the cluster
    - name: Set up GKE credentials
      uses: google-github-actions/get-gke-credentials@v0
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GAR_LOCATION }}
        #location: ${{ env.GKE_ZONE }}
        
    #
    # Build the .NET code
    #
    - name: Build solution
      run: |-
        dotnet publish kafkapublisher.sln \
          --configuration Release \
          --framework net6.0
        
    #
    # Build the Docker image and push it to Artifact Registry
    #
    - name: Create image tag
      run: echo "IMAGE_TAG=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:$GITHUB_SHA" >> $GITHUB_ENV
      
    - name: Lock image version in deployment.yaml
      run: sed -i 's|PUBLISHER_IMAGE|${{ env.IMAGE_TAG }}|g' deployment.yaml
    
    - name: Build Docker image
      run: docker build --tag "${{ env.IMAGE_TAG }}" .
      
    - name: Publish Docker image to Google Artifact Registry
      run: docker push "${{ env.IMAGE_TAG }}"
      
    #
    # Deploy to GKE    
    - name: Deploy to GKE
      run: kubectl apply -f deployment.yaml
